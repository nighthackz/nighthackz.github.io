{
  "date" : 1293868800000,
  "title" : "RAM is my friend",
  "body" : "I got a kick out of reading the Slashdot posting <a href=\n\"http://hardware.slashdot.org/article.pl?sid=11/01/01/1614215\">Replacing\nTraditional Storage, Databases With In-Memory Analytics</a>. One of\nmy personal quirks is that the relational/sql model has never made\nmuch sense to me. It's both cumbersome and slow. Give me a big\nbucket of RAM and a log file any day. It's always hugely faster and\nmore flexible. If the database is too big for RAM, <a href=\n\"http://en.wikipedia.org/wiki/Shard_(database_architecture)\">shard</a>.\nThere's a odd sort of political correctness about SQL. I've\nfrequently run into people with high performance transaction\nsystems. When asked how they achieved that performance, \"big\nHashMap\" comes up often, and often with a hint of embarrassment.\nSome people seem to think that it's just a hack that they're forced\ninto to achieve performance. But there's a murky distinction in my\nmind between \"hack\" and \"elegant technique\". I tend to think of the\nlog as the Truth, and RAM as a cache that just happens to be big\nenough to contain everything. There's a huge bag of tricks to trade\noff reliability, scale, distribution and startup time. Pick a point\nin that multidimensional space, and there's almost always a set of\ntricks to get you there.\n",
  "images" : [ ]
}