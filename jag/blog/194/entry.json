{
  "date" : 1161327600000,
  "title" : "Translation segmentation",
  "body" : "I've been hacking furiously on <a href=\n\"http://doc.java.sun.com\">doc.java.sun.com</a>, the community\ntranslation site for java documentation (even if you're not\ninterested in translation, it's still an interesting way to read\njavadoc). There's been a pile of bug fixing. The biggest change\nthat people using the site will notice is that when you volunteer\nto do translations, it breaks large chunks of text down into more\nmanageable segments. The isn't the full-up segmentation that\nprofessional translators need, but it's a step in the right\ndirection. I also got a start on a statistics module. And I poured\nall of the JavaEE 5 javax.* sources into it. With all of JavaSE and\nJavaEE in it, it's clear that I need to work on the navigation\nfacilities. \n\n<p>Some folks have looked at the sources and asked \"where's the\ndatabase?\". I'm a big believer in RAM. If I used a real database,\nsome pages would require close to 1000 database lookups to\nconstruct. Even with all kinds of cacheing, this turns into far too\nmuch time wasted waiting for a disk to spin. Instead, I just use\nin-memory data structures. Every user action (a translation or a\nvote) adds to the data structure and to a log file. When I reboot\nthe server, I just reprocess the logs. Given the statistics and\nsemantics of this application, this technique works well. It's\nmoderately straightforward to make this work well on clusters. And\nit's fast.</p>\n\n",
  "images" : [ ]
}