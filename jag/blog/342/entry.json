{
  "date" : 1282633200000,
  "title" : "Some more comments...",
  "body" : "I apologize for taking so long to reply to any of the comments on\nmy previous blog entry. Here are answers to a few... \n\n<div class=\"question\">\n  All that I can say is: Salute Sun, Salute. You were a noble in\n  time of bastards. Sun, you are badly missed...\n</div>We tried. DIdn't always succeed. One of the sad things about\nmodern commerce is that being a bastard is a good thing. At least\nin Wall Street's eyes. \n\n<div class=\"question\">\n  James, can you expand on why Android's fragmentation limits\n  programmers' freedom? I'm an Android developer and I really don't\n  see this at all. The code I write works without any changes on\n  most Android handsets and it's certainly orders of magnitude than\n  Java ME ever was\n</div>Java ME's fragmentation was far worse than we would have\nliked. Some of it was politics in the early days, then 10 years\nlater, small cracks in interoperability become gaping holes. A big\nfactor was that the incredible constraints of the handsets 10 years\nago made consistency almost impossible. Today's high end phones\nhave an incredible amount of RAM and CPU, which makes\ninteroperability hugely easier for Android. \n\n<p>Fragmentation limits programmers freedom because it increases\nthe amount of work that a developer has to do to address a large\nmarket, and the larger the market you can address, the better your\nchances are of being financially viable. So long as handset makers\nare \"lazy\" about implementing Android and don't take advantage of\nthe freedom they have to alter the Android source code much, life\nfor developers can be good. But differences will creep in as the\nAndroid world ages: version skews, different bug fixes, and the\nhandset makers attraction to \"added value\" and \"product\ndifferentiation\" will all take their toll without strict\ngovernance.</p>\n\n<div class=\"question\">\n  Hey James. Your discourse presents a well reasoned argument for\n  the issues of software development in the 21st century and how we\n  get product to the mainstream. Thanks for your firestorm. The\n  evidence of fragmentation of Android is here: Vodafone UK users\n  of went apocalyptic when they thought that they upgrading HTC\n  Heros to Android 2.1 only to receive branded applications.\n  Vodafone eventually backed down. This was a carrier not a phone\n  manufacturer. The battle of the future is a walled garden vs\n  freedom 2 modify your device. Correct.\n</div>Absolutely. It will only get worse. The \"walled garden\" is\nthe mostly deadly idea ever. All of the phone companies are\naddicted to it, even though I've had (for example) the CTO of a\n<b>very</b> large carrier admit in private that the whole walled\ngarden concept was a disaster. They just can't stop themselves.\nThey've got piles of bogus reasons. For example: The first cell\nphone app store was the one built by NTT DoCoMo a decade ago. It\nwas structured almost identically to Apple's - easy to become a\ndeveloper, easy deployment, 70% of revenue to the developer - it's\npretty likely that Apple got a lot of ideas from there. DoCoMo made\nbuckets of money and there was a huge amount of activity in the\nJapanese cellphone developer market. Developers were going from\nnapkin sketch to millionaire in a few months. It was huge. But what\ndid the phone carriers around the world think of this? The average\nattitude was \"Those fools at DoCoMo! They left all that money on\nthe table! Why did they make life so easy for developers? We'll\njust keep all that money to ourselves\". So they created walled\ngardens. I actually had one senior executive at a carrier say\n(approximately) \"We've had a crack team of our analysts evaluate\nwhat applications our customers need on their cell phones. There\nare a dozen of them, which we'll have our developers build\".\nIdiots. \n\n<div class=\"question\">\n  Apple gave you shared libraries in Java.\n</div>That was then, this is now. In the early days, Apple had a\ngreat Java team. They did lots of good work. But when Apple got\nsuccessful enough that they didn't need outside developers, they\nbuilt their own walled garden. \n\n<div class=\"question\">\n  I was at Sun back in 1987-88. They seem to have started thinking\n  about patents a bit in 88.\n</div>Yes. There was some patenting activity early on, but not a\nlot. It really got crazy after the RISC patent case. \n\n<div class=\"question\">\n  Mind your business. Mr. Gosling is old enough to defend himself.\n  Nothing in his post is correct about Apple. For example. Apple\n  has the right to create a platform and not invite Mr. Gosling's\n  love child. Nor let Google in to sell its ads in the iphone. I\n  don't see Google allowing anyone in the google.com ad business.\n  So why should Apple allow it. especially when important customer\n  information is being stolen by google. Since When is Apple's ad\n  network a threat to mankind when it is only going to live in the\n  iPhone. You mean that is a direct threat to Google.\n</div>They totally have the right to create their own platform.\nThey totally have the right to create their own ad network in\ncompetition to Google. But I also have the right to be grumpy about\nthe tools they require for software developers. Steve is well on\nhis way to becoming the dictator he <a href=\n\"http://www.youtube.com/watch?v=OYecfV3ubP8\">lampooned in Apple's\n1984 commercial</a>. And yes, I meant that Apple's ad network\nthreatens Google. They only really turn into wide ranging threats\nif they achieve monopoly-level success and then abuse that\nmonopoly. \n\n<div class=\"question\">\n  In Oracle's hands, Java is doomed. I have to agree that Mono has\n  a much brighter future than Java since last week. I love Java,\n  but can't say the same about Oracle! It's unfortunate that MySQL\n  and VirtualBox will share fate with Java - just like OpenSolaris\n</div>In my brief time getting to know Oracle, they made it very\nclear that you're mostly right (I'd quibble with the Mono part -\nit's still silly). The key phrase is \"in Oracle's hands\". It\ndoesn't have to be that way. Lightning might strike and they might\nlive up to their 2007 commitment to create an independent Java\nfoundation. I'm not holding my breath, but if enough <a href=\n\"http://www.cafepress.com/OrcOmit\">customers rose up in revolt</a>,\nit could actually happen. But it would require Oracle customers to\ndo this, since the only thing that Oracle pays attention to is\nmoney, and that's what customers hand over to Oracle. \n\n<div class=\"question\">\n  thank you for telling us this and we able to see from different\n  prospective. But we all hope, an agreement can be come out from\n  oracle,google side to address this revenue issue. if this can be\n  solved, surely java will continue to prosperous. Or if we prefer\n  continue like thist. you sue me, i sue them. this will be endless\n  profit for lawyers\n</div>No matter what the merits of the case may be, or who is\nright, or who has a \"right\" to do what, the crossfire in the battle\nwill be hugely distructive (and I don't just mean the patent case).\nI wish they'd all vent their testosterone elsewhere. \n\n<div class=\"question\">\n  The underlying problem here is that the rules of the current\n  economic game favor evil (mostly in the form of cancerous\n  growth). The degree of corporate liability for the evil is\n  actually limited. Exxon has bought far more laws than Google\n  has--so far. Whatever you think about Microsoft's software (and I\n  think it reeks like the big dog's m0e), their economic model\n  apparently works. For OSS, I think one answer is better economic\n  models. One idea might be a kind of shared charity reverse\n  auction pseudo-stock market. Ergo:\n  http://eco-epistemology.blogspot.com/2009/11/economics-of-small-donors-reverse.html\n  There's a lot of confusing because \"free\" is so badly overloaded\n  in English. The important sense of free involves meaningful,\n  significant, and unconstrained choice. Anti-trust is NOT a\n  penalty for success. However, improved laws should insist that\n  overly successful companies reproduce--by dividing and competing\n  against themselves.\n</div>It's not so much that the game favors evil, but that the\ndefinition of \"good\" is really twisted: <br>\n <b>Good</b> <i>adj</i>: anything which increases the stock price.\n<br>\nConsiderations about employees, products, customers and community\nare all secondary. They only enter the equation as ways to achieve\ngoal 1. Morality or high principles have no place in the corporate\ndiscourse. They maximize the stock price, within the bounds of the\nlaw. Corporations like Oracle and Exxon tend to be perfectly\nrational. They \"buy laws\" because it's perfectly legal to spend\nmoney on lobbyists and political campaigns. While you and I might\nthink that it is morally reprehensible to buy elections, like the\nrecent case with Target, it is nonetheless totally legal. Given the\nrules of the game, it would be bad for a corporation to <i>not</i>\nbuy an election, if failing to do so would negatively impact their\nstock price. I could rant for a long time on this one, but not\ntoday&#8230; The whole modern concept of a public company is deeply\nflawed. But the game is what it is. \n\n<div class=\"question\">\n  I'd be interested in hearing answers to the issues no posted.\n  What happened to the Lighthouse desktop apps? Why did their\n  conversion to Java fail? \n\n  <p>As a former Sun guy myself, I too am disappointed that more\n  didn't come of the Lighthouse acquisition. However, you do have\n  to remember the context. It was just after the mid 90s and there\n  was an opportunity to enter/win the server side app development\n  approach. Sun was better positioned to do that and it was\n  probably much more lucrative than building out Java desktop\n  applications. I think Sun made the right decision and got a lot\n  of mileage for SUNW on Solaris/servers/JavaEE. More so than\n  building a better mail client or presentation tool for sure.</p>\n</div>The conversion didn't fail: it was never attempted. There\nwere lots of reasons: Microsoft and three giant lawsuits over the\nlate 90s/early 00s chilled desktop work; development funding was\nrestricted; and enterprise software was hugely more profitable and\ndidn't involve collisions with Microsoft's monopolies. \n\n<div class=\"question\">\n  I think it's quite hard to stop fragmentation on mobile without\n  stopping innovation. Mobile phones differ radically in speed,\n  screen, memory, bandwidth, input-method, and so on, to produce a\n  single app that runs everywhere well is a tall order, even if the\n  APIs were identical. J2ME was a nice try, but the profiles\n  themselves created fragmentation. Android devices are fragmented\n  in a smaller way by contrast, first, the bar for performance\n  minimum and OS features are set way higher. Secondly, there's no\n  profiles\n</div>This was very true in the mobile world a decade ago and was a\nhuge driver of fragmentation; but with todays dramatically more\npowerful handsets, and especially given the concentration on\nhigh-end handsets, there's no reason for any fragmentation. \n\n<div class=\"question\">\n  Hello, With all respect I beg to disagree with James(Thanks for\n  Java BTW) here. Java was developed by SUN but only succeeded\n  because of the promise of openness. Remember it was an itch for\n  many people at the time( both from SUN and out of SUN) to use a\n  cross platform language without restrictions. Everybody including\n  Google, IBM, BEA, and ... Oracle bought into Java because they\n  believed they could do so without any restrictions. Java would\n  have failed if it belonged to somebody. If today it is proven\n  that it belongs to Oracle, it will Fail. I would never touch c#\n  with a stick because I know I am being trapped. Just my 2c.\n</div>Yes and no. The vision of freedom that most of the big\ncorporate interests had was the ability to make their platform\nsticky: to destroy interoperability so that (for example) Java\nsoftware developed on Microsoft platforms could only run on\nMicrosoft platforms. They wanted the freedom to capture developers.\nWhile Microsoft may be the one that got caught in a big court case\nwith a pile of incriminating evidence in the public record, few of\nthe other corporate actors were much better. \"Freedom\" is a\nfreakishly relative word. The freedom of the large software\ncompanies is directly at odds with the freedom of developers.\n",
  "images" : [ ]
}